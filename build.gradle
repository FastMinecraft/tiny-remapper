plugins {
	id 'java'
	id 'maven-publish'
	id 'org.cadixdev.licenser' version '0.5.0'
	id 'com.github.johnrengelman.shadow' version '6.1.0'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

version = '1.1.0'

def ENV = System.getenv()

group = 'dev.architectury'
archivesBaseName = 'tiny-remapper'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.ow2.asm:asm:9.1'
	implementation 'org.ow2.asm:asm-commons:9.1'
	implementation 'org.ow2.asm:asm-tree:9.1'
	implementation 'org.ow2.asm:asm-util:9.1'
}

java {
	withSourcesJar()
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"

	if (JavaVersion.current().isJava9Compatible()) {
		it.options.release = 8
	}
}

license {
	header file("HEADER")
	include '**/*.java'
}

shadowJar {
	relocate 'net.fabricmc.tinyremapper', 'dev.architectury.tinyremapper'
	classifier null
	configurations = []
}

jar {
	manifest {
		attributes	'Implementation-Title': 'TinyRemapper',
					'Implementation-Version': archiveVersion,
					'Main-Class': "dev.architectury.tinyremapper.Main"
	}
	classifier 'raw'
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact shadowJar
		}
	}

	repositories {
		if (ENV.MAVEN_URL) {
			maven {
				url ENV.MAVEN_URL
				credentials {
					username ENV.MAVEN_USERNAME
					password ENV.MAVEN_PASSWORD
				}
			}
		}
	}
}

// A task to ensure that the version being released has not already been released.
task checkVersion {
	doFirst {
		def xml = new URL("https://maven.fabricmc.net/net/fabricmc/tiny-remapper/maven-metadata.xml").text
		def metadata = new XmlSlurper().parseText(xml)
		def versions = metadata.versioning.versions.version*.text();
		if (versions.contains(version)) {
			throw new RuntimeException("${version} has already been released!")
		}
	}
}

publish.mustRunAfter checkVersion